describe 'Pi Step tests', ->
    secua = nil
    
    setup ->
        secua = (require 'secua')('secua')
    
    before_each ->
        stub _G, "print"
    
    it 'correctly rotates each lane', ->
        input = {
            0x00, 0x01, 0x02, 0x03, 0x04, 
            0x05, 0x06, 0x07, 0x08, 0x09, 
            0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 
            0x0f, 0x10, 0x11, 0x12, 0x13, 
            0x14, 0x15, 0x16, 0x17, 0x18
        }
        expected = {
            0x00, 0x06, 0x0c, 0x12, 0x18,
            0x03, 0x09, 0x0a, 0x10, 0x16,
            0x01, 0x07, 0x0d, 0x13, 0x14,
            0x04, 0x05, 0x0b, 0x11, 0x17,
            0x02, 0x08, 0x0e, 0x0f, 0x15
        }
        state = secua.sha3.state
        pi = secua.sha3.steps.pi
        result = pi state input
        assert.are.same expected, result.getBytes!