describe 'AES 192 bit block encryption', ->
    secua = nil
    
    setup ->
        secua = (require 'secua')('secua')
    
    before_each ->
        stub _G, "print"
    
    it 'correctly encrypts data with the given key', ->
        inputkey = { 
            0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF,
            0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF 
        }
        inputdata = {
            0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10
        }
        expected = {
            0x4A, 0x8D, 0xD3, 0x13, 0xC1, 0xFE, 0x7C, 0x37, 0x22, 0xFC, 0x89, 0xE5, 0x42, 0x20, 0xDE, 0x9E
        }
        bit192, keyschedule = secua.aes.encrypt.bit192, secua.aes.keyschedule
        encrypteddata = bit192 inputdata, (keyschedule inputkey)
        assert.are.same expected, encrypteddata
    
    it 'rejects a nil input block', ->
        inputkey = { 
            0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF,
            0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF 
        }
        bit192, keyschedule = secua.aes.encrypt.bit192, secua.aes.keyschedule
        
        assert.is_nil(bit192 nil, (keyschedule inputkey))
        assert.stub(print).was.called!
    
    it 'rejects a nil input key', ->
        inputdata = {
            0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10
        }
        bit192, keyschedule = secua.aes.encrypt.bit192, secua.aes.keyschedule
        
        assert.is_nil(bit192 inputdata, nil)
        assert.stub(print).was.called!
    
    it 'rejects a nil input for both block and key', ->
        bit192, keyschedule = secua.aes.encrypt.bit192, secua.aes.keyschedule
        
        assert.is_nil(bit192 nil, nil)
        assert.stub(print).was.called!
    
    it 'rejects an invalid block size', ->
        inputkey = { 
            0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF,
            0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF 
        }
        inputdata = {
            0x76, 0x54, 0x32, 0x10, 0xFE, 0xDC, 0xBA, 0x98, 0x76, 0x54, 0x32, 0x10
        }
        bit192, keyschedule = secua.aes.encrypt.bit192, secua.aes.keyschedule
        
        assert.is_nil(bit192 inputdata, (keyschedule inputkey))
        assert.stub(print).was.called!